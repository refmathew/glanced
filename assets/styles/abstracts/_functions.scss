@use "sass:math";

// =============================================================================
// ===   Clampification   ======================================================
// =============================================================================

// This is assuming 10px is the root font size you use in your dev.
// Please see globals.scss
@function remify($px) {
	@return #{math.div($px, 10)}rem;
}

// Append px to number value (this is because the css calc fn only allows
// division or subtraction if one argument is a number, so I needed to get
// plain numbers as argument to the clampify function)
@function pixelateNum($number) {
	@return #{$number}px;
}

// Minimum & maximum sizes of viewport in design
$minWidth: 360;
$maxWidth: 1440;
$minWidthPx: pixelateNum($minWidth);
$maxWidthPx: pixelateNum($maxWidth);

// We only care about resizing in between the minWidth and the maxWidth
$rangeVw: calc($maxWidth - $minWidth);

@function clampify($min, $max) {
	// if $min == $max
	@if ($min == $max) {
		@return remify($min);
	}
	// We only care about resizing in between the $min and $max
	$rangeVal: calc($max - $min);
	// Ratio of every 1px in $rangeVal to $rangeVw
	$ratio: calc((1 / $rangeVal) * $rangeVw);

	$clampified: clamp(
		remify($min),
		calc(remify($min) + ((100vw - $minWidthPx) / $ratio)),
		remify($max)
	);
	@return $clampified;
}
